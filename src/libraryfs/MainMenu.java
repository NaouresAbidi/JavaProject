/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package libraryfs;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author HP
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        booktable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        bookname = new javax.swing.JTextField();
        bookauthor = new javax.swing.JTextField();
        publishdate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        stock = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        searchfieldinput = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        searchbookid = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clienttable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        clientname = new javax.swing.JTextField();
        clientsurname = new javax.swing.JTextField();
        identitynb = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        searchfieldinput1 = new javax.swing.JTextField();
        searchclientid = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        bookid = new javax.swing.JTextField();
        clientid = new javax.swing.JTextField();
        sdate = new javax.swing.JTextField();
        searchfieldinput2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        searchborrowid = new javax.swing.JButton();
        ldate = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        borrowtable = new javax.swing.JTable();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(236, 221, 174));

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Action");

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(clear))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(add)
                .addGap(18, 18, 18)
                .addComponent(update)
                .addGap(18, 18, 18)
                .addComponent(delete)
                .addGap(73, 73, 73)
                .addComponent(clear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(197, 171, 157));

        booktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Book Name", "Book Author", "Publish Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(booktable);
        if (booktable.getColumnModel().getColumnCount() > 0) {
            booktable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(171, 120, 120));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add a Book Form");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Book Name");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Book Author");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Publish Date");

        stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Stock");

        searchfieldinput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchfieldinputActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Search Book By ID");

        searchbookid.setText("Find");
        searchbookid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbookidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookname)
                    .addComponent(bookauthor)
                    .addComponent(publishdate)
                    .addComponent(stock)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(searchfieldinput, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchbookid))
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 43, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(7, 7, 7)
                .addComponent(bookname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookauthor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(publishdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(3, 3, 3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchfieldinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbookid))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Books", jPanel3);

        jPanel7.setBackground(new java.awt.Color(85, 101, 107));

        clienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "Client Name", "Client Surname", "Identity Number", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(clienttable);
        if (clienttable.getColumnModel().getColumnCount() > 0) {
            clienttable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(94, 68, 71));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add a client Form");

        clientname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientnameActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Client Name");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Client Surname");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Identity Number");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Email");

        searchclientid.setText("Find");
        searchclientid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchclientidActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Search Client By ID");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clientname)
                    .addComponent(clientsurname)
                    .addComponent(identitynb)
                    .addComponent(email)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(searchfieldinput1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchclientid))
                            .addComponent(jLabel14))
                        .addGap(0, 37, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(27, 27, 27)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientsurname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addGap(4, 4, 4)
                .addComponent(identitynb, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchfieldinput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchclientid))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Clients", jPanel4);

        jPanel9.setBackground(new java.awt.Color(171, 120, 120));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Create a Borrowing Form");

        bookid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookidActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Book ID");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Client ID");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Start Date");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Search Borrow By ID");

        searchborrowid.setText("Find");
        searchborrowid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchborrowidActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Limit Date");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ldate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(bookid, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(clientid, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(sdate, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel19)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(searchfieldinput2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchborrowid)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(4, 4, 4)
                .addComponent(sdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ldate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchfieldinput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchborrowid))
                .addGap(35, 35, 35))
        );

        jPanel10.setBackground(new java.awt.Color(197, 171, 157));

        borrowtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "Book ID", "Client ID", "Start Date", "Limit Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(borrowtable);
        if (borrowtable.getColumnModel().getColumnCount() > 0) {
            borrowtable.getColumnModel().getColumn(0).setMaxWidth(25);
        }

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Borrowings", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jTabbedPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        String ID1 = searchfieldinput.getText();
        String ID2 = searchfieldinput1.getText();
        String ID3 = searchfieldinput2.getText();
        int notFound = 1; 

        try {    
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/libraryfs_db";
            String username = "root";
            String pass = "";
            Connection con = DriverManager.getConnection(url, username, pass);
            Statement statement = con.createStatement();

        
            if (!ID1.isEmpty()) { 
                String sql = "DELETE FROM books WHERE id LIKE '" + ID1 + "'";
                int rowsAffected = statement.executeUpdate(sql);
                if (rowsAffected > 0) {
                    notFound = 0;
                    String[] bookColumnNames = {"id", "bookname", "bookauthor", "publishdate", "stock"};
                    loadData(booktable, bookColumnNames);
                }
            }

       
            if (!ID2.isEmpty()) { 
                String sql = "DELETE FROM clients WHERE id LIKE '" + ID2 + "'";
                int rowsAffected = statement.executeUpdate(sql);
                if (rowsAffected > 0) {
                    notFound = 0;
                    String[] clientColumnNames = {"id", "clientname", "clientsurname", "identitynb", "email"};
                    loadData(clienttable, clientColumnNames);
                }
            }
            if(!ID3.isEmpty()){
                String sql = "DELETE FROM borrow WHERE id LIKE '" + ID3 + "'";
                int rowsAffected = statement.executeUpdate(sql);
                if (rowsAffected > 0) {
                    notFound = 0;
                    String[] clientColumnNames = {"id", "bookid", "clientid", "sdate", "ldate"};
                    loadData(borrowtable, clientColumnNames);
                }
                
            }

            con.close();

            if (notFound == 1) {
                JOptionPane.showMessageDialog(new JFrame(),"Nothing here !","Dialog",JOptionPane.ERROR_MESSAGE);                
            }

        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Error: " + e.getMessage());
    }
    }//GEN-LAST:event_deleteActionPerformed
    public void loadData(JTable table, String[] columnNames) throws ClassNotFoundException, SQLException {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/libraryfs_db";
        String username = "root";
        String password = "";
        Connection con = DriverManager.getConnection(url, username, password);
        Statement statement = con.createStatement();
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        table.setModel(model);
        String sql = null;
        if (table == booktable) {
            sql = "SELECT * FROM books";
        } else if( table == clienttable){
            sql = "SELECT * FROM clients";
        }else if (table == borrowtable){
            sql = "SELECT * FROM borrow";
        }
        ResultSet rs = statement.executeQuery(sql);
        String[] rowData = new String[columnNames.length];
        while (rs.next()) {
            for (int i = 0; i < columnNames.length; i++) {
                rowData[i] = rs.getString(columnNames[i]);
            }
            model.addRow(rowData);
        }
    } catch (HeadlessException | ClassNotFoundException | SQLException e) {
        System.out.println("Error" + e.getMessage());
    }
}

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String bn , ba, pd, st , query;
        String cn,cs,idn,em;
        String bi,ci,sd,ld;
        //db conection
        
        if(!("".equals(bookname.getText()))){
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:MySQL://localhost:3306/libraryfs_db" ;
                String username = "root"; 
                String pass = "";
                Connection con = DriverManager.getConnection(url, username, pass);
                Statement statement = con.createStatement();
                if("".equals(bookname.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"Book name is required","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else if("".equals(bookauthor.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"Book author is required","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else if("".equals(publishdate.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"publish date is required","Dialog",JOptionPane.ERROR_MESSAGE);
                }else if ("".equals(stock.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"stock is required","Dialog",JOptionPane.ERROR_MESSAGE);
                }else {
                    bn = bookname.getText();
                    ba = bookauthor.getText();
                    pd = publishdate.getText();
                    st = stock.getText();
                    query = "INSERT INTO books (bookname ,bookauthor ,publishdate ,stock)"+"VALUES('"+bn+"','"+ba+"','"+pd+"','"+st+"')";
                    statement.executeUpdate(query);
                    bookname.setText("");
                    bookauthor.setText("");
                    publishdate.setText("");
                    stock.setText("");
                    JOptionPane.showMessageDialog(new JFrame(), "Operation successful", "Success", JOptionPane.INFORMATION_MESSAGE);
                    String[] bookColumnNames = {"id", "bookname", "bookauthor", "publishdate", "stock"};
                    loadData(booktable, bookColumnNames);
                    con.close();
                }
            
            }catch(HeadlessException | ClassNotFoundException | SQLException e){
                System.out.println("Error"+ e.getMessage());
                
            }       
        }else if(!("".equals(clientname.getText()))){
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:MySQL://localhost:3306/libraryfs_db" ;
                String username = "root"; 
                String pass = "";
                Connection con = DriverManager.getConnection(url, username, pass);
                Statement statement = con.createStatement();
            
                if("".equals(clientname.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"Client name is required","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else if("".equals(clientsurname.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"Client Surname is required","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else if("".equals(identitynb.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"Identification is required","Dialog",JOptionPane.ERROR_MESSAGE);
                }else if ("".equals(email.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"email is required","Dialog",JOptionPane.ERROR_MESSAGE);
                }else {
                    cn =clientname.getText();
                    cs = clientsurname.getText();
                    idn = identitynb.getText();
                    em = email.getText();
                    query = "INSERT INTO clients (clientname ,clientsurname ,identitynb ,email)"+"VALUES('"+cn+"','"+cs+"','"+idn+"','"+em+"')";
                    statement.executeUpdate(query);
                    clientname.setText("");
                    clientsurname.setText("");
                    identitynb.setText("");
                    email.setText("");
                    JOptionPane.showMessageDialog(new JFrame(), "Operation successful", "Success", JOptionPane.INFORMATION_MESSAGE);
                    String[] bookColumnNames = {"id", "clientname", "clientsurname", "identitynb", "email"};
                    loadData(clienttable, bookColumnNames);
                    con.close();
                }   
            }catch(HeadlessException | ClassNotFoundException | SQLException e){
                System.out.println("Error"+ e.getMessage());
            }     
        }else if(!("".equals(bookid.getText()))){
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:MySQL://localhost:3306/libraryfs_db" ;
                String username = "root"; 
                String pass = "";
                Connection con = DriverManager.getConnection(url, username, pass);
                Statement statement = con.createStatement();
                if("".equals(bookid.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"book id is required","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else if("".equals(clientid.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"client id is required","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else if("".equals(sdate.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"start date is required","Dialog",JOptionPane.ERROR_MESSAGE);
                }else if ("".equals(ldate.getText())){
                    JOptionPane.showMessageDialog(new JFrame(),"limit date is required","Dialog",JOptionPane.ERROR_MESSAGE);
                }else {
                    bi = bookid.getText();
                    ci = clientid.getText();
                    sd = sdate.getText();
                    ld = ldate.getText();
                    query = "INSERT INTO borrow (bookid ,clientid ,sdate ,ldate)"+"VALUES('"+bi+"','"+ci+"','"+sd+"','"+ld+"')";
                    statement.executeUpdate(query);
                    bookid.setText("");
                    clientid.setText("");
                    sdate.setText("");
                    ldate.setText("");
                    JOptionPane.showMessageDialog(new JFrame(), "Operation successful", "Success", JOptionPane.INFORMATION_MESSAGE);
                    String[] borrowColumnNames = {"id", "bookid", "clientid", "sdate", "ldate"};
                    loadData(borrowtable, borrowColumnNames);
                    con.close();
                }
            
            }catch(HeadlessException | ClassNotFoundException | SQLException e){
                System.out.println("Error"+ e.getMessage());
                
            }
        }
    }//GEN-LAST:event_addActionPerformed

    private void stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockActionPerformed

    private void clientnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientnameActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void searchfieldinputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchfieldinputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchfieldinputActionPerformed

    private void searchbookidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbookidActionPerformed
        String ID;
        int notFound = 0;
        try{    
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:MySQL://localhost:3306/libraryfs_db" ;
                String username = "root"; 
                String pass = "";
                Connection con = DriverManager.getConnection(url, username, pass);
                Statement statement = con.createStatement();
                ID =searchfieldinput.getText();
                if("".equals(ID)){
                    JOptionPane.showMessageDialog(new JFrame(),"ID is required for the search","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else{ 
                    String sql = "SELECT * FROM books WHERE id LIKE "+ID;
                    ResultSet rs = statement.executeQuery(sql);
                    while(rs.next()){
                        bookname.setText(rs.getString("bookname"));
                        bookauthor.setText(rs.getString("bookauthor"));
                        publishdate.setText(rs.getString("publishdate"));
                        stock.setText(rs.getString("stock"));
                        notFound = 1;
                        con.close();
                    }
                    if(notFound==0){
                        JOptionPane.showMessageDialog(new JFrame(),"Nothing here !","Dialog",JOptionPane.ERROR_MESSAGE);                
                    }                  
                }
        }catch(HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println("Error"+ e.getMessage());}
        

    }//GEN-LAST:event_searchbookidActionPerformed

    private void searchclientidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchclientidActionPerformed
        String ID;
        int notFound = 0;
        try{    
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:MySQL://localhost:3306/libraryfs_db" ;
                String username = "root"; 
                String pass = "";
                Connection con = DriverManager.getConnection(url, username, pass);
                Statement statement = con.createStatement();
                ID =searchfieldinput1.getText();
                if("".equals(ID)){
                    JOptionPane.showMessageDialog(new JFrame(),"ID is required for the search","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else{ 
                    String sql = "SELECT * FROM clients WHERE id LIKE "+ID;
                    ResultSet rs = statement.executeQuery(sql);
                    while(rs.next()){
                        clientname.setText(rs.getString("clientname"));
                        clientsurname.setText(rs.getString("clientsurname"));
                        identitynb.setText(rs.getString("identitynb"));
                        email.setText(rs.getString("email"));
                        notFound = 1;   
                    }
                    if(notFound==0){
                        JOptionPane.showMessageDialog(new JFrame(),"Nothing here !","Dialog",JOptionPane.ERROR_MESSAGE);                
                    }                  
                }
        }catch(HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println("Error"+ e.getMessage());}
    }//GEN-LAST:event_searchclientidActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clientname.setText("");
        clientsurname.setText("");
        identitynb.setText("");
        email.setText("");
        bookname.setText("");
        bookauthor.setText("");
        publishdate.setText("");
        stock.setText("");
        bookid.setText("");
        clientid.setText("");
        sdate.setText("");
        ldate.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String ID1 = searchfieldinput.getText();
        String bn , ba, pd, st;
        String cn,cs,idn,em;
        String bi,ci,sd,ld;
        String ID3 = searchfieldinput2.getText();
        String ID2 = searchfieldinput1.getText();
        int notFound = 1; 

        try {    
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/libraryfs_db";
            String username = "root";
            String pass = "";
            Connection con = DriverManager.getConnection(url, username, pass);
            Statement statement = con.createStatement();

        
            if (!ID1.isEmpty()) { 
                bn = bookname.getText();
                ba = bookauthor.getText();
                pd = publishdate.getText();
                st = stock.getText();
                String sql = "UPDATE books SET bookname='"+bn+"', bookauthor='"+ba+"', publishdate='"+pd+"', stock='"+st+"' WHERE id LIKE '" + ID1 + "'";
                int rowsAffected = statement.executeUpdate(sql);
                if (rowsAffected > 0) {
                    notFound = 0;
                    String[] bookColumnNames = {"id", "bookname", "bookauthor", "publishdate", "stock"};
                    loadData(booktable, bookColumnNames);
                }
            }

       
            if (!ID2.isEmpty()) { 
                cn = clientname.getText();
                cs = clientsurname.getText();
                idn = identitynb.getText();
                em = email.getText();
                String sql = "UPDATE clients SET clientname='"+cn+"', clientsurname='"+cs+"', identitynb='"+idn+"', email='"+em+"' WHERE id LIKE '" + ID2 + "'";
                int rowsAffected = statement.executeUpdate(sql);
                if (rowsAffected > 0) {
                    notFound = 0;
                    String[] clientColumnNames = {"id", "clientname", "clientsurname", "identitynb", "email"};
                    loadData(clienttable, clientColumnNames);
                }
            }
            if (!ID3.isEmpty()) { 
                bi = bookid.getText();
                ci = clientid.getText();
                sd = sdate.getText();
                ld = ldate.getText();
                String sql = "UPDATE borrow SET bookid='"+bi+"', clientid='"+ci+"', sdate='"+sd+"', ldate='"+ld+"' WHERE id LIKE '" + ID3 + "'";
                int rowsAffected = statement.executeUpdate(sql);
                if (rowsAffected > 0) {
                    notFound = 0;
                    String[] borrowColumnNames = {"id", "bookid", "clientid", "sdate", "ldate"};
                    loadData(borrowtable, borrowColumnNames);
                }
            }

            con.close();

            if (notFound == 1) {
                JOptionPane.showMessageDialog(new JFrame(),"Nothing here !","Dialog",JOptionPane.ERROR_MESSAGE);                
            }

        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Error: " + e.getMessage());
    }
    }//GEN-LAST:event_updateActionPerformed

    private void bookidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookidActionPerformed

    private void searchborrowidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchborrowidActionPerformed
        String ID;
        int notFound = 0;
        try{    
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:MySQL://localhost:3306/libraryfs_db" ;
                String username = "root"; 
                String pass = "";
                Connection con = DriverManager.getConnection(url, username, pass);
                Statement statement = con.createStatement();
                ID =searchfieldinput2.getText();
                if("".equals(ID)){
                    JOptionPane.showMessageDialog(new JFrame(),"ID is required for the search","Dialog",JOptionPane.ERROR_MESSAGE);                
                }else{ 
                    String sql = "SELECT * FROM borrow WHERE id LIKE "+ID;
                    ResultSet rs = statement.executeQuery(sql);
                    while(rs.next()){
                        bookid.setText(rs.getString("bookid"));
                        clientid.setText(rs.getString("clientid"));
                        sdate.setText(rs.getString("sdate"));
                        ldate.setText(rs.getString("ldate"));
                        notFound = 1;
                        con.close();
                    }
                    if(notFound==0){
                        JOptionPane.showMessageDialog(new JFrame(),"Nothing here !","Dialog",JOptionPane.ERROR_MESSAGE);                
                    }                  
                }
        }catch(HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println("Error"+ e.getMessage());}
        

    }//GEN-LAST:event_searchborrowidActionPerformed

    /**
     * @param args the command line arguments
     */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
        MainMenu x1 = new MainMenu();
        try {
            String[] bookColumnNames = {"id", "bookname", "bookauthor", "publishdate", "stock"};
            x1.loadData(x1.booktable, bookColumnNames);

            String[] clientColumnNames = {"id", "clientname", "clientsurname", "identitynb", "email"};
            x1.loadData(x1.clienttable, clientColumnNames);
            String[] borrowColumnNames = {"id", "bookid", "clientid", "sdate", "ldate"};
            x1.loadData(x1.borrowtable, borrowColumnNames);
        } catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        x1.setLocationRelativeTo(null);
        x1.setVisible(true);
    });
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField bookauthor;
    private javax.swing.JTextField bookid;
    private javax.swing.JTextField bookname;
    private javax.swing.JTable booktable;
    private javax.swing.JTable borrowtable;
    private javax.swing.JButton clear;
    private javax.swing.JTextField clientid;
    private javax.swing.JTextField clientname;
    private javax.swing.JTextField clientsurname;
    private javax.swing.JTable clienttable;
    private javax.swing.JButton delete;
    private javax.swing.JTextField email;
    private javax.swing.JTextField identitynb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField ldate;
    private javax.swing.JTextField publishdate;
    private javax.swing.JTextField sdate;
    private javax.swing.JButton searchbookid;
    private javax.swing.JButton searchborrowid;
    private javax.swing.JButton searchclientid;
    private javax.swing.JTextField searchfieldinput;
    private javax.swing.JTextField searchfieldinput1;
    private javax.swing.JTextField searchfieldinput2;
    private javax.swing.JTextField stock;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
